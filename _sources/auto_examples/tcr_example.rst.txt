
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/tcr_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_tcr_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_tcr_example.py:


TCR LBC for CMAQ
================================

This example shows how to use aqmbc with TROPESS Composition Reanalysis (TCR)
files, which are available thru NASA Earthdata Search

* Define translation.
* Extract and translate.
* Display figures and statistics.

.. GENERATED FROM PYTHON SOURCE LINES 11-21

.. code-block:: default


    import aqmbc
    import numpy as np
    import pandas as pd
    import matplotlib.pyplot as plt
    import glob
    import xarray as xr

    gdnam = '12US1'


.. GENERATED FROM PYTHON SOURCE LINES 22-24

Define Translation Expressions
------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 24-28

.. code-block:: default


    # In Notebooks, display available expressions
    aqmbc.exprlib.avail('tcr')


.. GENERATED FROM PYTHON SOURCE LINES 29-52

.. code-block:: default


    exprpaths = aqmbc.exprlib.exprpaths([
        'tcr_o3so4.expr',                 # for a full run, comment this
        # 'tcr_cb6.expr', 'tcr_ae7.expr'  # for a full run, uncomment this
    ], prefix='tcr')

    # For "real" VGLVLS use
    # METBDYD_PATH = '...'
    # metaf = pnc.pncopen(METBDY3D_PATH, format='ioapi')
    metaf = aqmbc.options.getmetaf(bctype='bcon', gdnam=gdnam, vgnam='EPA_35L')
    inpath = sorted(glob.glob(
        'TCR-2/tropess.gesdisc.eosdis.nasa.gov/data/TCR2_MON_*/*/*.nc'
    ))
    suffix = f'_{gdnam}_BCON.nc'
    dims = aqmbc.options.dims['tcr']
    outpath = f'TROPESS_reanalysis_mon_2021_{gdnam}_BCON.nc'
    history = f'From {inpath}'
    outf = aqmbc.bc(
        inpath, outpath, metaf, vmethod='linear', exprpaths=exprpaths,
        dimkeys=dims, format_kw={'format': 'tcr'}, history=history,
        clobber=True, verbose=0
    )


.. GENERATED FROM PYTHON SOURCE LINES 53-55

Figures and Statistics
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    tflag = (outf['TFLAG'][:, 0, :].astype('l') * np.array([1000000, 1])).sum(1)
    time = pd.to_datetime(tflag, format='%Y%j%H%M%S')
    vprof = xr.Dataset(
        data_vars={
            k: (v.dimensions, v[:], {pk: v.getncattr(pk) for pk in v.ncattrs()})
            for k, v in outf.variables.items()
        },
        coords={'TSTEP': time, 'LAY': (outf.VGLVLS[:-1] + outf.VGLVLS[1:]) / 2}
    ).mean('PERIM', keep_attrs=True)
    statdf = aqmbc.report.getstats([outpath])
    statdf.to_csv('tcr_summary.csv')


.. GENERATED FROM PYTHON SOURCE LINES 69-71

Visualize Vertical Profiles
---------------------------

.. GENERATED FROM PYTHON SOURCE LINES 71-76

.. code-block:: default


    fig = aqmbc.report.plot_2spc_vprof(vprof)
    fig.suptitle('TCR Boundary Conditions for CMAQ')
    fig.savefig('tcr_profiles.png')


.. GENERATED FROM PYTHON SOURCE LINES 77-79

Barplot of Concentrations
-------------------------

.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: default


    fig = aqmbc.report.plot_gaspm_bars(statdf)
    fig.savefig('tcr_bar.png')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_tcr_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tcr_example.py <tcr_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tcr_example.ipynb <tcr_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
